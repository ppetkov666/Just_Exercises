<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/23/2019 1:41:13 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NEW"
  DTS:CreatorName="NEW\User"
  DTS:DTSID="{2E86FEA2-917D-46B8-96F8-3A449FA74668}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1026"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="2"
  DTS:VersionGUID="{7487E779-EF96-40F8-9826-34C093E4F3EC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{89075A36-2721-4113-A3D8-B0D4E51A1B36}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Users\User\Desktop\exported_employees_table.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Display message"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{98C01348-C509-4B32-BB9C-BF911A517596}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Display message"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a8b6859a443f420586ebe81f91c2a6f5"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_a8b6859a443f420586ebe81f91c2a6f5.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{38257575-cc70-443f-809e-9ec3694099de}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a8b6859a443f420586ebe81f91c2a6f5</RootNamespace>
    <AssemblyName>ST_a8b6859a443f420586ebe81f91c2a6f5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_a8b6859a443f420586ebe81f91c2a6f5
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show("Importing data..");
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_a8b6859a443f420586ebe81f91c2a6f5</msb:CodeName>
    <msb:DisplayName>ST_a8b6859a443f420586ebe81f91c2a6f5</msb:DisplayName>
    <msb:ProjectId>{21B991D6-C8B8-44EC-870B-F70203152EF1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a8b6859a443f420586ebe81f91c2a6f5.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8b6859a443f420586ebe81f91c2a6f5.Properties.Settings.get_Default():ST_a8b6859a443f420586ebe81f91c2a6f5.Properties.Sett" +
    "ings")]

namespace ST_a8b6859a443f420586ebe81f91c2a6f5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a8b6859a443f420586ebe81f91c2a6f5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a8b6859a443f420586ebe81f91c2a6f5")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8b6859a443f420586ebe81f91c2a6f5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8b6859a443f420586ebe81f91c2a6f5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8b6859a443f420586ebe81f91c2a6f5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a8b6859a443f420586ebe81f91c2a6f5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a8b6859a443f420586ebe81f91c2a6f5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a8b6859a443f420586ebe81f91c2a6f5.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL/tvlwAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAAi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAsAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
LAAAAAAAAEgAAAACAAUA0CAAACgLAAABAAAAAAAAAPgrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJyAQAAcCgQAAAKJgIoEQAAChZvEgAACioeAigTAAAKKh4C
KBQAAAoqrn4BAAAELR5yIwAAcNADAAACKBUAAApvFgAACnMXAAAKgAEAAAR+AQAABCoafgIAAAQq
HgKAAgAABCoafgMAAAQqHgIoGAAACioucwgAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAApAMAACN+AAAQBAAAHAUAACNTdHJpbmdzAAAAACwJAACYAAAAI1VTAMQJ
AAAQAAAAI0dVSUQAAADUCQAAVAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAA
AB0AAAAFAAAABgAAAAkAAAABAAAAGAAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAA
AQAAAAAAGgMBAAAAAAAGAN0B4QMGAGwC4QMGACkBzgMPAFUEAAAGAFYBjwMGAMABjwMGAKEBjwMG
AFMCjwMGAP0BjwMGABYCjwMGAG0BjwMGAIgBkAIKADECyQIKAKgAyQIGAEkDQgMGAAwBzgMGAM8E
QgMGALEDAQQGAKEDegMOANwABAMOAD0BBAMOAMQAZQMGAPEA4QMSAAMFnAQSAOIEnAQKAPICyQIG
AHMAQgMGAE8AQgMGABIFjwMAAAAAJQAAAAAAAQABAAEAEABaAwEAOQABAAEAAAAQAAgEZARFAAEA
AwAAARAAkwRkBFkAAwAHAAMBAADBBAAAPQAEAAoAEQBOA1UAEQCYAFkAEQA/AF0ABgYuAGEAVoCx
BGQAVoB4AGQAUCAAAAAAhgBgAwYAAQBpIAAAAACGGMEDBgABAHEgAAAAAIMYwQMGAAEAeSAAAAAA
kwitA2gAAQClIAAAAACTCIAAbQABAKwgAAAAAJMIjAByAAEAtCAAAAAAlgjWBHgAAgC7IAAAAACG
GMEDBgACAMMgAAAAAJEYxwN9AAIAAAABAIoCCQDBAwEAEQDBAwYAGQDBAwoAKQDBAxAAMQDBAxAA
OQDBAxAAQQDBAxAASQDBAxAAUQDBAxAAWQDBAxAAYQDBAxAAaQDBAwYAgQDBAwYAqQDBAxUAuQDB
AwYAwQD+BBsAcQC5BCEA0QDvBAEAcQDBAwYAiQDBAwYA2QBhACYA2QAOBS0AkQDBAzIAsQDBAwYA
CAAUAEsACAAYAFAAKQBzALgALgALAJAALgATAJkALgAbALgALgAjAMEALgArAOoALgAzAOoALgA7
AOoALgBDAMEALgBLAPAALgBTAOoALgBbAAcBQwBjAFAASQBzALgAYQB7AFAAYwBrAFAAAwABAAQA
AwAAALEDgQAAAKAAhgAAANoEiwACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAIwbN2EA
AAAAAAABAAAABAAAAAAAAAAAAAAAOQA2AAAAAAAOAAAAAAAAAAAAAABCAKoCAAAAAAQAAAAAAAAA
AAAAADkAQgMAAAAABAAAAAAAAAAAAAAAOQCcBAAAAAAAAAAAAQAAABIEAAAFAAIAAAAAU1RfYThi
Njg1OWE0NDNmNDIwNTg2ZWJlODFmOTFjMmE2ZjUAPE1vZHVsZT4AdmFsdWVfXwBtc2NvcmxpYgBk
ZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2E4YjY4NTlh
NDQzZjQyMDU4NmViZTgxZjkxYzJhNmY1LmRsbABTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfYThiNjg1OWE0NDNmNDIwNTg2ZWJlODFmOTFjMmE2ZjUuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E4YjY4NTlhNDQzZjQyMDU4NmVi
ZTgxZjkxYzJhNmY1LlByb3BlcnRpZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3Vs
dABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAIUkAbQBwAG8A
cgB0AGkAbgBnACAAZABhAHQAYQAuAC4AAHFTAFQAXwBhADgAYgA2ADgANQA5AGEANAA0ADMAZgA0
ADIAMAA1ADgANgBlAGIAZQA4ADEAZgA5ADEAYwAyAGEANgBmADUALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAHQkL/A+7n5Epkg5lJovdd8ABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEVEFAAERZQ4EIAASaQYAARJtEXEEIAASdQYgAgEOEnUIt3pcVhk04IkIiYRd
zYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMA
AAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUX2E4YjY4NTlhNDQzZjQyMDU4NmViZTgxZjkxYzJhNmY1AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANgs
AAAAAAAAAAAAAPIsAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkLAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAN2GMGwAAAQA3YYwbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwBhADgAYgA2ADgANQA5AGEANAA0ADMAZgA0ADIAMAA1ADgANgBlAGIAZQA4ADEA
ZgA5ADEAYwAyAGEANgBmADUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANwAwADUAMgAuADIANAA4ADgANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwBhADgAYgA2ADgANQA5AGEANAA0ADMAZgA0ADIAMAA1ADgANgBlAGIAZQA4ADEAZgA5
ADEAYwAyAGEANgBmADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfAGEAOABiADYAOAA1ADkAYQA0ADQAMwBmADQAMgAwADUAOAA2AGUAYgBl
ADgAMQBmADkAMQBjADIAYQA2AGYANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBhADgAYgA2ADgANQA5AGEANAA0ADMAZgA0ADIAMAA1ADgANgBlAGIAZQA4
ADEAZgA5ADEAYwAyAGEANgBmADUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAMAA1ADIALgAyADQAOAA4ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMAA1ADIALgAyADQAOAA4ADcAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAABD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import employees Info into Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{470169ED-8F27-421C-BCAA-2F6EA67E4288}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import employees Info into Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import employees Info into Excel\Employees table"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="Employees table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."Employees"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import employees Info into Excel\Employees table.Connections[IDbConnection]"
                  connectionManagerID="{CD2AC95C-DB42-4CB8-A65D-61CD6A226985}:external"
                  connectionManagerRefId="Project.ConnectionManagers[new.SoftUni]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[EmployeeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[EmployeeID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[FirstName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[FirstName]"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[FirstName]"
                      name="FirstName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[LastName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[LastName]"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[MiddleName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[MiddleName]"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[MiddleName]"
                      name="MiddleName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[JobTitle]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[JobTitle]"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[JobTitle]"
                      name="JobTitle"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[DepartmentID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[DepartmentID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[DepartmentID]"
                      name="DepartmentID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[ManagerID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[ManagerID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[ManagerID]"
                      name="ManagerID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[HireDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[HireDate]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[HireDate]"
                      name="HireDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[Salary]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[Salary]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[Salary]"
                      name="Salary"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[AddressID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[AddressID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[AddressID]"
                      name="AddressID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[FirstName]"
                      dataType="wstr"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[MiddleName]"
                      dataType="wstr"
                      length="50"
                      name="MiddleName" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[JobTitle]"
                      dataType="wstr"
                      length="50"
                      name="JobTitle" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[DepartmentID]"
                      dataType="i4"
                      name="DepartmentID" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[ManagerID]"
                      dataType="i4"
                      name="ManagerID" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[HireDate]"
                      dataType="dbTimeStamp"
                      name="HireDate" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[Salary]"
                      dataType="cy"
                      name="Salary" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].ExternalColumns[AddressID]"
                      dataType="i4"
                      name="AddressID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[FirstName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[LastName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[MiddleName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[MiddleName]"
                      name="MiddleName" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[JobTitle]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[JobTitle]"
                      name="JobTitle" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[DepartmentID]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[DepartmentID]"
                      name="DepartmentID" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[ManagerID]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[ManagerID]"
                      name="ManagerID" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[HireDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[HireDate]"
                      name="HireDate" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[Salary]"
                      dataType="cy"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[Salary]"
                      name="Salary" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[AddressID]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[AddressID]"
                      name="AddressID" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import employees Info into Excel\excel employees"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="excel employees"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">excel_employees</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import employees Info into Excel\excel employees.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[FirstName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[MiddleName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="MiddleName"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[MiddleName]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[MiddleName]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[JobTitle]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="JobTitle"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[JobTitle]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[JobTitle]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[DepartmentID]"
                      cachedDataType="i4"
                      cachedName="DepartmentID"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[DepartmentID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[DepartmentID]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[ManagerID]"
                      cachedDataType="i4"
                      cachedName="ManagerID"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[ManagerID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[ManagerID]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[HireDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="HireDate"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[HireDate]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[HireDate]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[Salary]"
                      cachedDataType="cy"
                      cachedName="Salary"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[Salary]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[Salary]" />
                    <inputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].Columns[AddressID]"
                      cachedDataType="i4"
                      cachedName="AddressID"
                      externalMetadataColumnId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                      lineageId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output].Columns[AddressID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[EmployeeID]"
                      dataType="r8"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                      dataType="nText"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                      dataType="nText"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[MiddleName]"
                      dataType="nText"
                      name="MiddleName" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[JobTitle]"
                      dataType="nText"
                      name="JobTitle" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[DepartmentID]"
                      dataType="r8"
                      name="DepartmentID" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[ManagerID]"
                      dataType="r8"
                      name="ManagerID" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[HireDate]"
                      dataType="date"
                      name="HireDate" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[Salary]"
                      dataType="cy"
                      name="Salary" />
                    <externalMetadataColumn
                      refId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                      dataType="r8"
                      name="AddressID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import employees Info into Excel\excel employees.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\excel employees.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import employees Info into Excel\excel employees.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import employees Info into Excel\excel employees.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import employees Info into Excel.Paths[ADO NET Source Output]"
              endId="Package\Import employees Info into Excel\excel employees.Inputs[Excel Destination Input]"
              name="ADO NET Source Output"
              startId="Package\Import employees Info into Excel\Employees table.Outputs[ADO NET Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E052C8FE-DF3E-4E57-8120-1154D26BCFF7}"
      DTS:From="Package\Display message"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import employees Info into Excel" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Display message"
          TopLeft="134.285716572586,54.4470595871288" />
        <NodeLayout
          Size="235.2,41.6"
          Id="Package\Import employees Info into Excel"
          TopLeft="113.714287650828,141.31764904075" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="212.685716572586,96.0470595871288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.6285710782421,45.2705894536214"
              Start="0,0"
              End="18.6285710782421,37.7705894536214">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6352947268107" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6352947268107"
                    Point2="0,22.6352947268107"
                    Point3="4,22.6352947268107" />
                  <mssgle:LineSegment
                    End="14.6285710782421,22.6352947268107" />
                  <mssgle:CubicBezierSegment
                    Point1="14.6285710782421,22.6352947268107"
                    Point2="18.6285710782421,22.6352947268107"
                    Point3="18.6285710782421,26.6352947268107" />
                  <mssgle:LineSegment
                    End="18.6285710782421,37.7705894536214" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Package to Import Data"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="153.6,60"
          Id="4150ebbe-719b-4059-888a-49ceefa9b690"
          TopLeft="318.285719706088,45.270588870197" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import employees Info into Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\Import employees Info into Excel\Employees table"
          TopLeft="165.6,67.2" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Import employees Info into Excel\excel employees"
          TopLeft="170.4,176" />
        <EdgeLayout
          Id="Package\Import employees Info into Excel.Paths[ADO NET Source Output]"
          TopLeft="245.8,108.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67.2"
              Start="0,0"
              End="0,59.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import employees Info into Excel\Employees table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import employees Info into Excel\excel employees">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>